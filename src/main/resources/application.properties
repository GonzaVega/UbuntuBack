#API VERSION

server.port=${PORT}

## Configuración de la base de datos
spring.datasource.driver-class-name=${DB_DRIVER}
spring.datasource.url= ${DB_URL}
spring.datasource.username=root
spring.datasource.password=vodka29,

## Configuración de JPA
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.show-sql=true
spring.jpa.open-in-view=false

api.version=${API_VERSION}
api.url=/api/${API_VERSION}
api.description= This is an API to manage users, content and organizations for ubuntu. Provides endpoints to create, read, update, and delete users on the system.

# Google Login

spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
logging.level.org.springframework.security=TRACE

# JWT
jwt.secret = ${JWT_SECRET}

# CLOUDINARY
cloudinary.cloud-name=${CLOUDINARY_CLOUD_NAME}
cloudinary.api-key=${CLOUDINARY_API_KEY}
cloudinary.api-secret=${CLOUDINARY_API_SECRET}

# CORS
web.cors.allowed-origins=http://example.com,http://localhost:8080,http://localhost:8081,http://localhost:5173

# EMAIL
spring.mail.host=${EMAIL_HOST}
spring.mail.port=${EMAIL_PORT}
spring.mail.username=${EMAIL_USERNAME}
spring.mail.password=${EMAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
#spring.mail.properties.mail.smtp.starttls.required=true


