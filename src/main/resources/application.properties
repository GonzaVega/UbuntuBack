´´´server.port=${PORT}

## Configuración de la base de datos
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url= ${DB_URL}
spring.datasource.username=${DB_USER}
spring.datasource.password=${DB_PASSWORD}

## Configuración de JPA
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.show-sql=true
spring.jpa.open-in-view=false

api.version=1.0.0
api.description= This is an API to manage users, content and organizations for ubuntu. Provides endpoints to create, read, update, and delete users on the system.

# Google Login

spring.security.oauth2.client.registration.google.client-id=812742210015-teti3ojikbl41vlpmjc2osgmc1clj2hv.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
logging.level.org.springframework.security=TRACE

# JWT
jwt.secret = ${JWT_SECRET}

# CORS
web.cors.allowed-origins=http://example.com,http://localhost:8080,http://localhost:8081,http://localhost:5173

